# -*- coding: utf-8 -*-
"""00Lecture function.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17y0bc5hvShKaQR1tThxfYdWgfa9Uue6m
"""

# Commented out IPython magic to ensure Python compatibility.
#匯入套件
import pandas as pd
import numpy as np
import matplotlib.pylab as plt
import scipy.stats as scs
import matplotlib as mpl
import matplotlib.pyplot as plt
import datetime as dt
# %matplotlib inline
pd.options.mode.chained_assignment = None # default='warn'
import warnings
warnings.simplefilter('ignore')
import yfinance as yf

def stocklist():
  tw = pd.read_html('https://www.taifex.com.tw/cht/9/futuresQADetail',encoding='utf8')[0].iloc[:300]
  twlist = tw[['證券名稱']]
  twlist.columns = ['tic']
  twlist['st'] = '.TW'
  twlist['symb'] =  twlist['tic'].astype(str) + twlist['st']
  tic = twlist['symb'].tolist()
  return tic

def visual(df):
  df.add(1).cumprod().plot()
  plt.title('Cumulative profits')
  plt.xlabel('time')
  plt.ylabel('dollar')
  plt.show()
  return

def stat(x):
  u = x.mean()
  s = x.std()
  t = u/(s/len(x)**0.5)
  sr = (u/s)*250**0.5
  return print ('t-ratio:', round(t,2),';Sharpe ratio:',round(sr,2))

def performance(x):
    sr = (x.mean()/x.std())*np.sqrt(250)
    cr = x.add(1).cumprod().iloc[-1]
    dw = (x.add(1).cumprod()/x.add(1).cummax()-1).min()
    win = x[x>0].count()/x.count()
    stat = pd.DataFrame([sr,cr,dw,win]).T
    stat.columns = ['sr','cr','dw','win']
    return print(round(stat,2))

def sr(x):
  u = x.mean()
  s = x.std()
  sr = (u/s)*250**0.5
  return round(sr,2)

def cr(x):
  cr = x.add(1).cumprod()
  return round(cr.iloc[-1],2)

def mdd(x):
  cr = x.add(1).cumprod()
  cmax = cr.cummax()
  dd = cr/cmax -1
  return round(dd.min(),2)

def winr(x):
  win = x[x>0].count()
  return round(win/x.count(),2)

